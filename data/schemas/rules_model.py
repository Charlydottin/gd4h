# generated by datamodel-codegen:
#   filename:  rules.json
#   timestamp: 2022-01-28T15:22:37+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Rules(BaseModel):
    slug: Optional[str] = Field('id', title='Slug')
    model: Optional[str] = Field(
        'dataset',
        description='Mod√®le auquel appartient le champ descriptif',
        title='Model',
    )
    field_id: Optional[str] = Field('datasets.id', title='Field Id')
    label_fr: Optional[str] = Field('ID', title='Label Fr')
    label_en: Optional[str] = Field('ID', title='Label En')
    section: Optional[str] = Field('COMMON', title='Section')
    external_model: Optional[str] = Field('', title='External Model')
    external_model_display_keys: Optional[str] = Field(
        '', title='External Model Display Keys'
    )
    is_controled: Optional[bool] = Field(False, title='Is Controled')
    reference_table: Optional[str] = Field('', title='Reference Table')
    vocab: Optional[str] = Field('', title='Vocab')
    translation: Optional[bool] = Field(False, title='Translation')
    multiple: Optional[bool] = Field(False, title='Multiple')
    constraint: Optional[str] = Field('unique', title='Constraint')
    datatype: Optional[str] = Field('id', title='Datatype')
    is_indexed: Optional[bool] = Field(False, title='Is Indexed')
    is_facet: Optional[bool] = Field(False, title='Is Facet')
    ADMIN_scope_order: Optional[int] = Field(1, title='Admin Scope Order')
    LIST_order: Optional[int] = Field(-1, title='List Order')
    ITEM_order: Optional[int] = Field(-1, title='Item Order')
    FILTER_order: Optional[int] = Field(-1, title='Filter Order')
    mandatory: Optional[bool] = Field(False, title='Mandatory')
    editable: Optional[bool] = Field(False, title='Editable')
    commentable: Optional[bool] = Field(False, title='Commentable')
    description_fr: Optional[str] = Field('', title='Description Fr')
    description_en: Optional[str] = Field('', title='Description En')
